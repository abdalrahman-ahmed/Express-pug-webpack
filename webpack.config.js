/* eslint-disable no-console */const path = require('path');const webpack = require('webpack');const HtmlWebPackPlugin = require('html-webpack-plugin');const MiniCssExtractPlugin = require('mini-css-extract-plugin');const nodeExternals = require('webpack-node-externals');const hotModuleScript = 'webpack-hot-middleware/client?path=/__webpack_hmr&timeout=20000';// Pug filesconst pugPages = require('./pugPages');const env = process.env.NODE_ENV ? process.env.NODE_ENV : 'development';console.log('CURRENT ENV -> ', env);const js = {  test: /\.js$/,  exclude: /node_modules/,  use: [{    loader: 'babel-loader',  }],};const css = {  test: /\.css$/,  use: [env === 'development' ? 'style-loader' : MiniCssExtractPlugin.loader, {    loader: 'css-loader',    options: {      importLoaders: 1,      sourceMap: true,      minimize: true,      colormin: false,    },  }],};const sass = {  test: /\.sass$/,  use: [{ loader: 'style-loader' }, { loader: 'css-loader' }, { loader: 'postcss-loader' }, { loader: 'sass-loader' }],};const images = {  test: /\.jpg$/,  use: [{    loader: 'file-loader',    options: {      name: 'img/[name].[ext]',    },  }],};const pug = {  test: /\.pug$/,  use: [{    loader: 'pug-loader',  }],};module.exports = {  target: 'node',  externals: [nodeExternals()],  entry: {    server: [hotModuleScript, './server.js'],  },  mode: env,  output: {    filename: '[name]-[hash:7].bundle.js',    path: path.resolve(__dirname, './dist'),    publicPath: '/',  },  devServer: {    clientLogLevel: 'debug',    // contentBase: '/', Only for static files    overlay: true,    hot: true,    stats: { colors: true },  },  devtool: 'eval', // Very fast, may not be accurate  // devtool: 'eval-source-map', // Not as fast but accurate  module: {    rules: [js, css, sass, images, pug],  },  plugins: [    new HtmlWebPackPlugin({      filename: 'index.html',      template: './src/views/pages/index.pug',      inject: true,    }), ...pugPages.pages(env), // ...pugPages.pages(env, 'blog'),    new webpack.HotModuleReplacementPlugin(), // Enable HMR    new webpack.NoEmitOnErrorsPlugin()],};